### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: user!
}

type Mutation {
  Signup(email: String!, names: String!, password: String!): AuthPayload!
  createNewCard(answer: String!, question: String!): card!
  createNewUser(email: String!, names: String!, password: String!): user!
  deleteCard(id: Int!): String!
  login(email: String!, password: String!): AuthPayload!
  updateCard(answer: String!, id: Int!, question: String!): card!
}

type Query {
  getAllCards(orderBy: Sort): [card!]!
  getOneCard(id: Int!): card!
  getOneUser(email: String!): user!
  getOwnersCard(orderBy: Sort): [card]!
  getUsers: [user!]!
}

enum Sort {
  asc
  desc
}

type card {
  answer: String!
  id: Int!
  question: String!
}

type user {
  cards: [card!]!
  email: String!
  id: Int!
  names: String!
  password: String!
}
